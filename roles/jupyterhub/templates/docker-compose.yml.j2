version: "2"

services:
  hub-db:
    image: postgres:alpine
    container_name: jupyterhub-db
    restart: always
    environment:
      POSTGRES_DB: {{ jh_postgres_db }}
    env_file:
      - secrets.env
    volumes:
      - "db:/var/lib/postgresql/data"

  hub:
    depends_on:
      - hub-db
    build:
      context: .
      dockerfile: Dockerfile.jupyterhub
      args:
        JUPYTERHUB_VERSION: {{ jh_version }}
    restart: always
    image: jupyterhub
    container_name: jupyterhub
    volumes:
      # Bind Docker socket on the host so we can connect to the daemon from
      # within the container
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      # Bind Docker volume on host for JupyterHub database and cookie secrets
      - "data:{{ jh_data_volume_container }}"
    ports:
      - "{{ jh_port_host }}:{{ jh_port_container }}"
    links:
      - hub-db
    environment:
      # All containers will join this network
      DOCKER_NETWORK_NAME: {{ jh_docker_network }}
      # Notebook directory inside user image
      DOCKER_NOTEBOOK_DIR: {{ jupyter_notebook_dir }}
      # Using this run command (optional)
      DOCKER_SPAWN_CMD: {{ jupyter_spawn_cmd }}
      # Postgres db info
      POSTGRES_DB: {{ jh_postgres_db }}
      POSTGRES_HOST: hub-db
    env_file:
      - secrets.env
    command: >
      jupyterhub -f /srv/jupyterhub/jupyterhub_config.py

volumes:
  data:
    external:
      name: {{ jh_data_volume_host }}
  db:
    external:
      name: {{ jh_db_volume_host }}

networks:
  default:
    external:
      name: {{ jh_docker_network }}
